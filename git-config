#! /bin/bash
# Script for configuring git for customized use
# It configures using --global option
#
# Usage: {script-name} <editor-name>
#
# Defaults:
#    editor : vim

. ./common-script

# Exit statuses
ERR_CONFIG_FAIL=136
ERR_EDITOR_MISS=154

# Function for global git configuration
# Assumed that
#  $1 - key
#  $2 - value
execute_git() {
  if [ $# -lt 2 ]
  then
    error $FUNCTION_ERR_MSG $EXIT_FATAL
  fi

  git config --global $1 "$2"

  if [ $? -ne 0 ]
  then
    error "Cofiguration of ${BROWN}$1${NC} with ${RED}$2${NC} failed!." $ERR_CONFIG_FAIL
  else
    echo -e "Configuration of ${BROWN}$1${NC} with ${RED}$2${NC} successful"
  fi
}

# Debug
# set -x

notify 'Starting global configuration of git'
execute_git user.name 'Kaartic Sivaraam'
execute_git user.email 'kaarticsivaraam91196@gmail.com'
execute_git help.autoCorrect 2
execute_git alias.co checkout
execute_git alias.unstage 'reset HEAD --'
execute_git alias.st 'status'

DEFAULT_EDITOR='vim'
# If no editor specified, check for vim and use it
if [ -z "$1" ]
then
  notify "No editor specified. Using $DEFAULT_EDITOR."
  PREF_EDITOR=$DEFAULT_EDITOR
else
  notify "Using $1 as editor"
  PREF_EDITOR=$1
fi

# Check if editor is present and execute config
# command only if it's present
if ( command -v $PREF_EDITOR >/dev/null 2>&1 )
then
  execute_git core.editor $PREF_EDITOR
else
  error "$PREF_EDITOR is not present. Set another editor by passing a parameter. Aborting." $ERR_EDITOR_MISS
fi

execute_git push.default simple  # Embrace new git push behaviour
