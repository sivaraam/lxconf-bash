#! /bin/bash
# Script to ease common apt commands
#
# Usage: {script-name} [ upd | upg | dist | rem | ins <package-name> ]
#
# Short forms
#   1. upd  - u
#   2. upg  - U
#   3. dist - d
#   4. rem  - r
#   5. ins  - i

# Source the common functions
. ./common-script

# Function to execute apt-get command
execute_apt() {
  if [ $# -lt 1 ]
  then
    error $FUNCTION_ERR_MSG $EXIT_FATAL
  fi

  # check if user is root and execut command accordingly
  if root_check
  then
    apt-get $@
  else
    sudo apt-get $@
  fi
}

case "$1" in
  'upd' | 'u')
     # Update Package lists
     execute_apt update
     ;;

  'upg' | 'U')
     # Update Package lists and Upgrade Packages
     execute_apt update && execute_apt upgrade
     ;;

  'dist' | 'd')
     # Update Package lists and Perform dist-upgrade
     execute_apt update && execute_apt dist-upgrade
     ;;

  'arem' | 'a')
     # Remove unwanted packages
     execute_apt autoremove
     ;;

  'ins' | 'i')
     # Install package(s) specified after option
     if [ $# -lt 2 ]
     then
       print_usage 'ins <package_name(s)>'
     fi
     #  packages=`extract_packages "$*"`

     # shift by one parameter to get the list of packages
     shift
     execute_apt "install $@"
     ;;

  'pur' | 'p')
     # Purge the package specified
     if [ $# -lt 2 ]
     then
       print_usage 'pur <package_name(s)>'
     fi

     shift
     execute_apt "purge $@"
     ;;

  'rem' | 'r')
    # Remove specified packages
    if [ $# -lt 2 ]
    then
      print_usage 'rem <package_name(s)>'
    fi

    shift
    execute_apt "remove $@"
    ;;
  *)
     # Print usage method
     print_usage '[ arem | dist | ins | pur | rem | upd | upg ]'
esac
